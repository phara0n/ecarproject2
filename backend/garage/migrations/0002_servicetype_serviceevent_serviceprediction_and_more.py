# Generated by Django 5.2 on 2025-04-09 18:32

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('garage', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Nom du Service')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('default_interval_km', models.PositiveIntegerField(blank=True, null=True, verbose_name='Intervalle par défaut (km)')),
                ('default_interval_months', models.PositiveIntegerField(blank=True, null=True, verbose_name='Intervalle par défaut (mois)')),
            ],
            options={
                'verbose_name': 'Type de Service',
                'verbose_name_plural': 'Types de Service',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateField(default=django.utils.timezone.now, verbose_name="Date de l'intervention")),
                ('mileage_at_service', models.PositiveIntegerField(verbose_name="Kilométrage lors de l'intervention")),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_events', to='garage.vehicle', verbose_name='Véhicule')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_events', to='garage.servicetype', verbose_name='Type de Service')),
            ],
            options={
                'verbose_name': 'Intervention de Service',
                'verbose_name_plural': 'Interventions de Service',
                'ordering': ['-event_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_due_date', models.DateField(blank=True, null=True, verbose_name="Date d'échéance prévue")),
                ('predicted_due_mileage', models.PositiveIntegerField(blank=True, null=True, verbose_name='Kilométrage prévu')),
                ('prediction_source', models.CharField(choices=[('RULE', 'Basée sur règle'), ('ML', 'Modèle ML')], default='RULE', max_length=10)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_predictions', to='garage.vehicle')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_predictions', to='garage.servicetype')),
            ],
            options={
                'verbose_name': 'Prédiction de Service',
                'verbose_name_plural': 'Prédictions de Service',
                'ordering': ['vehicle', 'predicted_due_date', 'predicted_due_mileage'],
                'constraints': [models.UniqueConstraint(fields=('vehicle', 'service_type'), name='unique_prediction_per_vehicle_service')],
            },
        ),
        migrations.CreateModel(
            name='PredictionRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval_km', models.PositiveIntegerField(verbose_name='Intervalle (km)')),
                ('interval_months', models.PositiveIntegerField(blank=True, null=True, verbose_name='Intervalle (mois)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prediction_rules', to='garage.servicetype')),
            ],
            options={
                'verbose_name': 'Règle de Prédiction',
                'verbose_name_plural': 'Règles de Prédiction',
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('service_type',), name='unique_active_rule_per_service')],
            },
        ),
    ]
